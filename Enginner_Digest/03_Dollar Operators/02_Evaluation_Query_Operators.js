$expres--//no need to 
$regex--//for regularexpression

// ------------------------------------------------------------------------------------------------------------------------------------------
//Main thing-----------

$text //to make serach without using regex

//text only fir full texted word
// 1-> Create a Index for needed One
// 2-and apply query
db.students.find({$text:{$search:"youtube"}})
//Common words
const stopWords={
    "stop_words": [
      "a",
      "about",
      "above",
      "after",
      "again",
      "against",
      "all",
      "am",
      "an",
      "and",
      "any",
      "are",
      "aren't",
      "as",
      "at",
      "be",
      "because",
      "been",
      "before",
      "being",
      "below",
      "between",
      "both",
      "but",
      "by",
      "can't",
      "cannot",
      "could",
      "couldn't",
      "did",
      "didn't",
      "do",
      "does",
      "doesn't",
      "doing",
      "don't",
      "down",
      "during",
      "each",
      "few",
      "for",
      "from",
      "further",
      "had",
      "hadn't",
      "has",
      "hasn't",
      "have",
      "haven't",
      "having",
      "he",
      "he'd",
      "he'll",
      "he's",
      "her",
      "here",
      "here's",
      "hers",
      "herself",
      "him",
      "himself",
      "his",
      "how",
      "how's",
      "i",
      "i'd",
      "i'll",
      "i'm",
      "i've",
      "if",
      "in",
      "into",
      "is",
      "isn't",
      "it",
      "it's",
      "its",
      "itself",
      "let's",
      "me",
      "more",
      "most",
      "mustn't",
      "my",
      "myself",
      "no",
      "nor",
      "not",
      "of",
      "off",
      "on",
      "once",
      "only",
      "or",
      "other",
      "ought",
      "our",
      "ours",
      "ourselves",
      "out",
      "over",
      "own",
      "same",
      "she",
      "she'd",
      "she'll",
      "she's",
      "should",
      "shouldn't",
      "so",
      "some",
      "such",
      "than",
      "that",
      "that's",
      "the",
      "their",
      "theirs",
      "them",
      "themselves",
      "then",
      "there",
      "there's",
      "these",
      "they",
      "they'd",
      "they'll",
      "they're",
      "they've",
      "this",
      "those",
      "through",
      "to",
      "too",
      "under",
      "until",
      "up",
      "very",
      "was",
      "wasn't",
      "we",
      "we'd",
      "we'll",
      "we're",
      "we've",
      "were",
      "weren't",
      "what",
      "what's",
      "when",
      "when's",
      "where",
      "where's",
      "which",
      "while",
      "who",
      "who's",
      "whom",
      "why",
      "why's",
      "with",
      "won't",
      "would",
      "wouldn't",
      "you",
      "you'd",
      "you'll",
      "you're",
      "you've",
      "your",
      "yours",
      "yourself",
      "yourselves"
    ]
  }
  
  //for these type of words We have to USe REGEX
  db.students.find({ bio: { $regex: "on", $options: "i" } })
// ----------------------------------------------------------------------------------------------------------------------------------
  $mod

  db.students.find({age:{$mod:[2,0]}})     //these will give age%2==0
  learning_db>   db.students.find({age:{$mod:[2,1]}})
  //these will give age%2==1
[
  {
    _id: ObjectId('66bc65b4915863b37d228fba'),
    name: 'Bob',
    age: 23,
    gpa: Decimal128('3.9'),
    isActive: false,
    score: 88.75,
    attendance: Long('110'),
    joinedAt: Timestamp({ t: 1723622836, i: 2 }),
    graduationDate: ISODate('2024-06-10T00:00:00.000Z'),
    subjects: [ 'History', 'Geography', 'Art' ],
    contact: { email: 'bob@example.com', phone: '987-654-3210' },
    bio: 'I am on YouTube'
  },
  {
    _id: ObjectId('66bc65b4915863b37d228fbb'),
    name: 'Charlie',
    age: 21,
    gpa: Decimal128('3.65'),
    isActive: true,
    score: 92,
    attendance: Long('130'),
    joinedAt: Timestamp({ t: 1723622836, i: 3 }),
    graduationDate: ISODate('2024-07-20T00:00:00.000Z'),
    subjects: [ 'Physics', 'Chemistry', 'Biology' ],
    contact: { email: 'charlie@example.com', phone: '555-444-3333' },
    bio: 'I am on YouTube'
  }
]


db.users.aggregate([
  {
      $group: {
          _id: null,        // Group by null to aggregate all documents
          totalAge: { $sum: 1 } // Summing the age field
      }
  }
]);